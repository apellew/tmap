-- Reverse Generation Script
WITH data AS (
    SELECT 0000 AS order_by, 
        '--' || CHR(13) ||
        '-- 0000: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --' || CHR(13) ||
        '-- 0000: NOTE: You must NOT make changes to this script in an editor, it' || CHR(13) ||
	    '-- 0000: is automatically generated by the database-generator.sql script' || CHR(13) ||
        '-- 0000: the output from that script is this script.'|| CHR(13) ||
        '-- 0000: DATE: ' || (SELECT NOW()::text AS current_datetime) || CHR(13) ||
        '-- 0000: TABLE: ' || tmap_v0.get_table_row_counts_v0() || CHR(13) ||
        '-- 0000: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --' || CHR(13) ||
        '-- ' AS insert_sql
	UNION 
    SELECT
        0001 AS order_by,
        '-- 0001: Add in a function to return table and row counts' || CHR(13) ||
        '  CREATE OR REPLACE FUNCTION tmap_v0.get_table_row_counts_v0() RETURNS TEXT AS $$' || CHR(13) ||
        '  DECLARE' || CHR(13) ||
        '    -- This function is used to get a count from all the tables in the schema' || CHR(13) ||
        '    table_record TEXT;' || CHR(13) ||
        '    row_count TEXT;' || CHR(13) ||
        '    result_string TEXT := '''';' || CHR(13) ||
        '  BEGIN' || CHR(13) ||
        '    FOR table_record IN' || CHR(13) ||
        '      SELECT table_name AS name' || CHR(13) ||
        '      FROM information_schema.tables' || CHR(13) ||
        '      WHERE table_schema = ''tmap_v0''' || CHR(13) ||
        '      AND table_type = ''BASE TABLE''' || CHR(13) ||
        '    LOOP' || CHR(13) ||
        '      EXECUTE format(''SELECT COUNT(*)::text FROM %I.%I'', ''tmap_v0'', table_record)' || CHR(13) ||
        '      INTO row_count;' || CHR(13) ||
        '      result_string := result_string || table_record || '': '' || row_count || '', '';' || CHR(13) ||
        '    END LOOP;' || CHR(13) ||
        '    result_string := rtrim(result_string, '', '');' || CHR(13) ||
        '    RETURN result_string;' || CHR(13) ||
        '  END;' || CHR(13) ||
        '  $$ LANGUAGE plpgsql;' || CHR(13)
	UNION
	SELECT 0010 AS order_by, 
        CHR(13) || '-- 0010: Create a new schema for the data' || CHR(13) || 
        '  DROP SCHEMA IF EXISTS tmap_v0 CASCADE;' || CHR(13) ||
	    '  CREATE SCHEMA tmap_v0;' || CHR(13) || CHR(13) AS insert_sql
	UNION
    SELECT 0020 AS order_by, 
        CHR(13) || '-- 0020: Create a table for publishers' || CHR(13) ||  
        '  CREATE TABLE tmap_v0.publisher (' || CHR(13) ||
	    '    id SERIAL PRIMARY KEY,' || CHR(13) ||
	    '    name TEXT NOT NULL,' || CHR(13) ||
	    '    key TEXT NOT NULL' || CHR(13) ||
	    '  );' || CHR(13) || CHR(13) AS insert_sql
	UNION
	SELECT 0030 AS order_by, 
        CHR(13) || '-- 0030: Insert publishers' || CHR(13)
    UNION
	SELECT 0035 AS order_by,
	  '  INSERT INTO tmap_v0.publisher (name, key)' || CHR(13) ||
      '  VALUES (' || CHR(13) ||
      '    ''' || p.name || ''', ' || CHR(13) ||
      '    ''' || p.key || '''' || CHR(13) ||
      '  );' || CHR(13)
	FROM tmap_v0.publisher p
	UNION
	SELECT 0040 AS order_by, 
        CHR(13) || '-- 0040: Create a table for magazines' || CHR(13) ||  
        '  CREATE TABLE tmap_v0.magazine (' || CHR(13) ||
	    '    id SERIAL PRIMARY KEY,' || CHR(13) ||
	    '    publisher_id INTEGER NOT NULL,' || CHR(13) ||
	    '    name text NOT NULL,' || CHR(13) ||
	    '    key text NOT NULL,' || CHR(13) ||
	    '    copyright BOOLEAN DEFAULT TRUE,' || CHR(13) ||
	    '    default_x INTEGER NOT NULL,' || CHR(13) ||
	    '    default_y INTEGER NOT NULL' || CHR(13) ||
	    '  );' || CHR(13) || CHR(13) AS insert_sql
	UNION
	SELECT 0050 AS order_by, 
        CHR(13) || '-- 0050: Insert magazines' || CHR(13)
    UNION
	SELECT 0055 AS order_by,
	  '  INSERT INTO tmap_v0.magazine (name, key, copyright, publisher_id, default_x, default_y)' || CHR(13) ||
      '  VALUES (''' || m.name || ''', ''' || m.key || ''', ' || 
         m.copyright::TEXT || ', (SELECT id FROM tmap_v0.publisher WHERE key = ''' || p.key || '''), ' || m.default_x::TEXT || ', ' || m.default_y::TEXT || ');' || CHR(13)
	FROM tmap_v0.magazine m
	JOIN tmap_v0.publisher p ON m.publisher_id = p.id
	UNION
	SELECT 0060 AS order_by, 
        CHR(13) || '-- 0040: Create a table for magazine issues' || CHR(13) ||  
        '  CREATE TABLE tmap_v0.issue (' || CHR(13) ||  
        '    id SERIAL PRIMARY KEY,' || CHR(13) ||  
        '    magazine_id INTEGER NOT NULL,' || CHR(13) ||  
        '    date DATE NOT NULL,' || CHR(13) ||  
        '    reference TEXT NOT NULL,' || CHR(13) ||  
        '    name text NOT NULL,' || CHR(13) ||  
        '    key text NOT NULL,' || CHR(13) ||  
        '    default_x INTEGER,' || CHR(13) ||  
        '    default_y INTEGER' || CHR(13) ||  
        '  );' || CHR(13) || CHR(13) AS insert_sql
	UNION
	SELECT 0070 AS order_by, 
        CHR(13) || '-- 0070: Insert issues' || CHR(13)
    UNION
	SELECT 0075 AS order_by,
	  '  INSERT INTO tmap_v0.issue (magazine_id, date, reference, name, key, default_x, default_y)' || CHR(13) ||
      '  VALUES (' || CHR(13) ||
      '    (SELECT id FROM tmap_v0.magazine WHERE key = ''' || m.key || '''), ' || CHR(13) ||
      '    ''' || i.date::TEXT || '''::DATE, ' || CHR(13) ||
      '    ''' || i.reference::TEXT || ''', ' || CHR(13) ||
      '    ''' || i.name || ''', ' || CHR(13) ||
      '    ''' || i.key || ''', ' || CHR(13) ||
      '    ' || COALESCE(i.default_x::TEXT, 'null'::TEXT) || ', ' || CHR(13) ||
      '    ' || COALESCE(i.default_y::TEXT, 'null'::TEXT) || CHR(13) ||
      '  );' || CHR(13)
	FROM tmap_v0.issue i
	JOIN tmap_v0.magazine m ON i.magazine_id = m.id
	UNION
	SELECT 0080 AS order_by, 
        CHR(13) || '-- 0080: Create a table for magazine issue pages' || CHR(13) ||  
        '  CREATE TABLE tmap_v0.page (' || CHR(13) ||  
        '    id SERIAL PRIMARY KEY,' || CHR(13) ||  
        '    issue_id INTEGER NOT NULL,' || CHR(13) ||  
        '    page_number INTEGER NOT NULL,' || CHR(13) ||  
        '    key TEXT NOT NULL,' || CHR(13) ||  
        '    x INTEGER,' || CHR(13) ||  
        '    y INTEGER' || CHR(13) ||  
        '  );' || CHR(13) || CHR(13) AS insert_sql
	UNION
	SELECT 0080 AS order_by, 
        CHR(13) || '-- 0080: Insert pages' || CHR(13)
    UNION
	SELECT 0085 AS order_by,
	  '  INSERT INTO tmap_v0.page (issue_id, page_number, key, x, y)' || CHR(13) ||
      '  VALUES (' || CHR(13) ||
      '    (SELECT id FROM tmap_v0.issue WHERE key = ''' || i.key || ''' AND magazine_id = (SELECT id FROM tmap_v0.magazine WHERE key = ''' || m.key || ''')), ' || CHR(13) || 
      '    ' || p.page_number || ', ' || CHR(13) ||
      '    ''' || p.key || ''', ' || CHR(13) ||
      '    ' || COALESCE(p.x::TEXT, 'null'::TEXT) || ', ' || CHR(13) ||
      '    ' || COALESCE(p.y::TEXT, 'null'::TEXT) || CHR(13) ||
      '  );' || CHR(13)
	FROM tmap_v0.page p
    JOIN tmap_v0.issue i ON p.issue_id = i.id
	JOIN tmap_v0.magazine m ON i.magazine_id = m.id
	UNION
	SELECT 0090 AS order_by, 
        CHR(13) || '-- 0090: Create a table for page item types' || CHR(13) ||  
        '  CREATE TABLE tmap_v0.page_item_type(' || CHR(13) ||
      '      id SERIAL PRIMARY KEY,' || CHR(13) ||
      '      name TEXT NOT NULL' || CHR(13) ||
      '    );' || CHR(13) || CHR(13) AS insert_sql
	UNION
	SELECT 0100 AS order_by, 
        CHR(13) || '-- 0100: Insert page item types' || CHR(13)
    UNION
	SELECT 0105 AS order_by,
	  '  INSERT INTO tmap_v0.page_item_type(name)' || CHR(13) ||
      '  VALUES (' || CHR(13) ||
      '    ''' || pit.name || '''' || CHR(13) ||
      '  );' || CHR(13)
	FROM tmap_v0.page_item_type pit
	UNION
	SELECT 0110 AS order_by, 
        CHR(13) || '-- 0110: Create a table for description types' || CHR(13) ||  
        '  CREATE TABLE tmap_v0.description_type(' || CHR(13) ||
      '      id SERIAL PRIMARY KEY,' || CHR(13) ||
      '      name TEXT NOT NULL' || CHR(13) ||
      '    );' || CHR(13) || CHR(13) AS insert_sql
	UNION
	SELECT 0120 AS order_by, 
        CHR(13) || '-- 0120: Insert description types' || CHR(13)
    UNION
	SELECT 0125 AS order_by,
	  '  INSERT INTO tmap_v0.description_type(name)' || CHR(13) ||
      '  VALUES (' || CHR(13) ||
      '    ''' || dt.name || '''' || CHR(13) ||
      '  );' || CHR(13)
	FROM tmap_v0.description_type dt
	UNION
	SELECT 0130 AS order_by, 
      CHR(13) || '-- 0130: Create a table for page items' || CHR(13) ||  
      '  CREATE TABLE tmap_v0.page_item (' || CHR(13) ||
      '    id SERIAL PRIMARY KEY,' || CHR(13) ||
      '    page_id INTEGER NOT NULL,' || CHR(13) ||
      '    order_by INTEGER NOT NULL DEFAULT 1,' || CHR(13) ||
      '    key TEXT NOT NULL,' || CHR(13) ||
      '    type_id INTEGER NOT NULL,' || CHR(13) ||
      '    title TEXT NOT NULL,' || CHR(13) ||
      '    description TEXT NOT NULL,' || CHR(13) ||
      '    description_type_id INTEGER NOT NULL,' || CHR(13) ||
      '    x_start INTEGER NOT NULL,' || CHR(13) ||
      '    y_start INTEGER NOT NULL,' || CHR(13) ||
      '    spanWidth INTEGER NOT NULL DEFAULT -1,' || CHR(13) ||
      '    spanHeight INTEGER NOT NULL DEFAULT -1' || CHR(13) ||
      '  );' || CHR(13) || CHR(13) AS insert_sql
	UNION
	SELECT 0140 AS order_by, 
        CHR(13) || '-- 0140: Insert page items' || CHR(13)
    UNION
	SELECT
	    0150 AS order_by,
		' ' || CHR(13) ||
		'-- tmap_v0.page_item: Page ' || LPAD(p.page_number::TEXT, 4, '0') || ' item ' || LPAD(pi.order_by::TEXT, 2, '0') || CHR(13) ||
		'INSERT INTO tmap_v0.page_item(page_id, order_by, key, type_id, title, description_type_id, description, x_start, y_start, spanWidth, spanHeight)' || CHR(13) ||
	    'VALUES (' || CHR(13) ||
	    '  (SELECT p.id' || CHR(13) ||
	    '  FROM tmap_v0.page p' || CHR(13) ||
	    '  JOIN tmap_v0.issue i ON i.id = p.issue_id' || CHR(13) ||
	    '  WHERE p.page_number = ' || p.page_number::TEXT || CHR(13) ||
	    '  AND i.name = ''' || i.name ||'''), -- page_id' || CHR(13) ||
	    '  ' || pi.order_by::TEXT || ', -- order_by' || CHR(13) ||
	    '  ''I' || pi.order_by::TEXT ||''', -- key' || CHR(13) ||
	    '  (SELECT pit.id FROM tmap_v0.page_item_type pit WHERE name = ''' || pit.name || '''), -- type_id' || CHR(13) ||
	    '  ''' || REPLACE(pi.title, '''', '''''') || ''', -- title' || CHR(13) ||
	    '  (SELECT id FROM tmap_v0.description_type WHERE name = ''' || dt.name || '''), -- description_type_id' || CHR(13) ||
	    '  ''' ||  REPLACE(REPLACE(pi.description, CHR(13), ''' || CHR(13) || '''), '''', '''''') || ''', -- description' || CHR(13) ||
	    '  ' || pi.x_start::TEXT || ', -- x_start' || CHR(13) ||
	    '  ' || pi.y_start::TEXT || ', -- y_start' || CHR(13) ||
	    '  ' || pi.spanWidth::TEXT || ', -- spanWidth' || CHR(13) ||
	    '  ' || pi.spanHeight::TEXT || ' -- spanHeight' || CHR(13) ||
	    ');' || CHR(13) AS insert_sql
	FROM tmap_v0.page_item pi
	JOIN tmap_v0.page p ON p.id = pi.page_id
	JOIN tmap_v0.issue i ON p.issue_id = i.id
	JOIN tmap_v0.page_item_type pit ON pit.id = pi.type_id
	JOIN tmap_v0.description_type dt ON dt.id = pi.description_type_id
)
SELECT REPLACE(STRING_AGG(d.insert_sql, '' ORDER BY d.order_by, d.insert_sql), CHR(13) || CHR(13), CHR(13))
FROM data d


